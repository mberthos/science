kind: ServiceAccount
apiVersion: v1
metadata:
  name: helloworld-flagger
  namespace: flagger
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-flagger
  namespace: flagger
  labels:
    app: helloworld-flagger
spec:
  minReadySeconds: 5
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: helloworld-flagger
  template:
    metadata:
      labels:
        app: helloworld-flagger
    spec:
      serviceAccountName: helloworld-flagger
      containers:
        - name: helloworld-flagger
          ###image types###
          #red, orange, yellow, green, blue, purple /
          #High error rate images, prefixed with the word bad (e.g. argoproj/rollouts-demo:bad-yellow)
          #High latency images, prefixed with the word slow (e.g. argoproj/rollouts-demo:slow-yellow)
          image: argoproj/rollouts-demo:orange
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 2000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: helloworld-flagger
  namespace: flagger
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: helloworld-flagger
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          # scale up if usage is above
          # 99% of the requested CPU (100m)
          averageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld-flagger
  namespace: flagger
  labels:
    app: helloworld-flagger
    service: helloworld-flagger
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: helloworld-flagger